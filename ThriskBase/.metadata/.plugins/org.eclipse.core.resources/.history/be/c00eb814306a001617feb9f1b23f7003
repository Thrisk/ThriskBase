package com.thrisk.base.world;

import java.util.Random;

import com.thrisk.base.blocks.ModBlocks;

import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkGenerator;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.gen.feature.WorldGenMinable;
import net.minecraft.world.gen.feature.WorldGenerator;
import net.minecraftforge.fml.common.IWorldGenerator;

public class ModWorldGen implements IWorldGenerator {
	
    private WorldGenerator KariniumOre; //Generates Karinium Ore (used in Overworld)
    
    public modWorldGen() {
        this.KaramiumOre = new WorldGenMinable(ModBlocks.KariniumOre, 5);
    }
    
    @Override
    public void generate(Random random, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator, IChunkProvider chunkProvider){
    switch (world.provider.dimensionId) {
    	case 0: //Overworld
    		this.runGenerator(this.KariniumOre, world, random, chunkX, chunkZ, 6, 2, 16);
    		break;
    	case -1: //Nether

    		break;
    	case 1: //End

    		break;
    	case -100: //Under Dark
    		this.runGenerator(this.KariniumOre, world, random, chunkX, chunkZ, 32, 2, 36);
    		break;
    	case 7: //Twilight Forest
    		this.runGenerator(this.KariniumOre, world, random, chunkX, chunkZ, 8, 2, 16);
    		break;
   		}
    }
    private void runGenerator(WorldGenerator generator, World world, Random rand, int chunk_X, int chunk_Z, int chancesToSpawn, int minHeight, int maxHeight) {
        if (minHeight < 0 || maxHeight > 256 || minHeight > maxHeight)
            throw new IllegalArgumentException("Illegal Height Arguments for WorldGenerator");

        int heightDiff = maxHeight - minHeight + 1;
        for (int i = 0; i < chancesToSpawn; i ++) {
            int x = chunk_X * 16 + rand.nextInt(16);
            int y = minHeight + rand.nextInt(heightDiff);
            int z = chunk_Z * 16 + rand.nextInt(16);
            generator.generate(world, rand, x, y, z);
        }
    }
}
